{
    "openapi": "3.0.0",
    "info": {
        "title": "OpenAI API",
        "description": "The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.",
        "version": "2.0.0",
        "termsOfService": "https://openai.com/policies/terms-of-use",
        "contact": {
            "name": "OpenAI Support",
            "url": "https://help.openai.com/"
        },
        "license": {
            "name": "MIT",
            "url": "https://github.com/openai/openai-openapi/blob/master/LICENSE"
        }
    },
    "servers": [
        {
            "url": "https://skynetdev.ngrok.app/v1"
        }
    ],
    "tags": [
        {
            "name": "Assistants",
            "description": "Build Assistants that can call models and use tools."
        },
        {
            "name": "Files",
            "description": "Files are used to upload documents that can be used with features like Assistants and Fine-tuning."
        }
    ],
    "paths": {
        "/assistants": {
            "get": {
                "operationId": "listAssistants",
                "tags": [
                    "Assistants"
                ],
                "summary": "Returns a list of assistants.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.\n",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and `desc` for descending order.\n",
                        "schema": {
                            "type": "string",
                            "default": "desc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list.\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListAssistantsResponse"
                                }
                            }
                        }
                    }
                },
                "x-oaiMeta": {
                    "name": "List assistants",
                    "beta": true,
                    "returns": "A list of [assistant](/docs/api-reference/assistants/object) objects."
                }
            },
            "post": {
                "operationId": "createAssistant",
                "tags": [
                    "Assistants"
                ],
                "summary": "Create an assistant with a model and instructions.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAssistantRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssistantObject"
                                }
                            }
                        }
                    }
                },
                "x-oaiMeta": {
                    "name": "Create assistant",
                    "beta": true,
                    "returns": "An [assistant](/docs/api-reference/assistants/object) object."
                }
            }
        },
        "/assistants/{assistant_id}": {
            "get": {
                "operationId": "getAssistant",
                "tags": [
                    "Assistants"
                ],
                "summary": "Retrieves an assistant.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "assistant_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the assistant to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssistantObject"
                                }
                            }
                        }
                    }
                },
                "x-oaiMeta": {
                    "name": "Retrieve assistant",
                    "beta": true,
                    "returns": "The [assistant](/docs/api-reference/assistants/object) object matching the specified ID."
                }
            },
            "post": {
                "operationId": "modifyAssistant",
                "tags": [
                    "Assistant"
                ],
                "summary": "Modifies an assistant.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "assistant_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the assistant to modify."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModifyAssistantRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssistantObject"
                                }
                            }
                        }
                    }
                },
                "x-oaiMeta": {
                    "name": "Modify assistant",
                    "beta": true,
                    "returns": "The modified [assistant](/docs/api-reference/assistants/object) object."
                }
            },
            "delete": {
                "operationId": "deleteAssistant",
                "tags": [
                    "Assistants"
                ],
                "summary": "Delete an assistant.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "assistant_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the assistant to delete."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteAssistantResponse"
                                }
                            }
                        }
                    }
                },
                "x-oaiMeta": {
                    "name": "Delete assistant",
                    "beta": true,
                    "returns": "Deletion status"
                }
            }
        },
        "/threads": {
            "post": {
                "operationId": "createThread",
                "tags": [
                    "Assistants"
                ],
                "summary": "Create a thread.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateThreadRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ThreadObject"
                                }
                            }
                        }
                    }
                },
                "x-oaiMeta": {
                    "name": "Create thread",
                    "beta": true,
                    "returns": "A [thread](/docs/api-reference/threads) object."
                }
            }
        },
        "/threads/{thread_id}": {
            "get": {
                "operationId": "getThread",
                "tags": [
                    "Assistants"
                ],
                "summary": "Retrieves a thread.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "thread_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the thread to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ThreadObject"
                                }
                            }
                        }
                    }
                },
                "x-oaiMeta": {
                    "name": "Retrieve thread",
                    "beta": true,
                    "returns": "The [thread](/docs/api-reference/threads/object) object matching the specified ID."
                }
            },
            "post": {
                "operationId": "modifyThread",
                "tags": [
                    "Assistants"
                ],
                "summary": "Modifies a thread.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "thread_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the thread to modify. Only the `metadata` can be modified."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModifyThreadRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ThreadObject"
                                }
                            }
                        }
                    }
                },
                "x-oaiMeta": {
                    "name": "Modify thread",
                    "beta": true,
                    "returns": "The modified [thread](/docs/api-reference/threads/object) object matching the specified ID."
                }
            },
            "delete": {
                "operationId": "deleteThread",
                "tags": [
                    "Assistants"
                ],
                "summary": "Delete a thread.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "thread_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the thread to delete."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteThreadResponse"
                                }
                            }
                        }
                    }
                },
                "x-oaiMeta": {
                    "name": "Delete thread",
                    "beta": true,
                    "returns": "Deletion status"
                }
            }
        },
        "/threads/{thread_id}/messages": {
            "get": {
                "operationId": "listMessages",
                "tags": [
                    "Assistants"
                ],
                "summary": "Returns a list of messages for a given thread.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "thread_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the [thread](/docs/api-reference/threads) the messages belong to."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.\n",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and `desc` for descending order.\n",
                        "schema": {
                            "type": "string",
                            "default": "desc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list.\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListMessagesResponse"
                                }
                            }
                        }
                    }
                },
                "x-oaiMeta": {
                    "name": "List messages",
                    "beta": true,
                    "returns": "A list of [message](/docs/api-reference/messages) objects."
                }
            },
            "post": {
                "operationId": "createMessage",
                "tags": [
                    "Assistants"
                ],
                "summary": "Create a message.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "thread_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the [thread](/docs/api-reference/threads) to create a message for."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateMessageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageObject"
                                }
                            }
                        }
                    }
                },
                "x-oaiMeta": {
                    "name": "Create message",
                    "beta": true,
                    "returns": "A [message](/docs/api-reference/messages/object) object."
                }
            }
        },
        "/threads/{thread_id}/messages/{message_id}": {
            "get": {
                "operationId": "getMessage",
                "tags": [
                    "Assistants"
                ],
                "summary": "Retrieve a message.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "thread_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the [thread](/docs/api-reference/threads) to which this message belongs."
                    },
                    {
                        "in": "path",
                        "name": "message_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the message to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageObject"
                                }
                            }
                        }
                    }
                },
                "x-oaiMeta": {
                    "name": "Retrieve message",
                    "beta": true,
                    "returns": "The [message](/docs/api-reference/threads/messages/object) object matching the specified ID."
                }
            },
            "post": {
                "operationId": "modifyMessage",
                "tags": [
                    "Assistants"
                ],
                "summary": "Modifies a message.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "thread_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the thread to which this message belongs."
                    },
                    {
                        "in": "path",
                        "name": "message_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the message to modify."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModifyMessageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageObject"
                                }
                            }
                        }
                    }
                },
                "x-oaiMeta": {
                    "name": "Modify message",
                    "beta": true,
                    "returns": "The modified [message](/docs/api-reference/threads/messages/object) object."
                }
            }
        },
        "/threads/runs": {
            "post": {
                "operationId": "createThreadAndRun",
                "tags": [
                    "Assistants"
                ],
                "summary": "Create a thread and run it in one request.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateThreadAndRunRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RunObject"
                                }
                            }
                        }
                    }
                },
                "x-oaiMeta": {
                    "name": "Create thread and run",
                    "beta": true,
                    "returns": "A [run](/docs/api-reference/runs/object) object."
                }
            }
        },
        "/threads/{thread_id}/runs": {
            "get": {
                "operationId": "listRuns",
                "tags": [
                    "Assistants"
                ],
                "summary": "Returns a list of runs belonging to a thread.",
                "parameters": [
                    {
                        "name": "thread_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the thread the run belongs to."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.\n",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and `desc` for descending order.\n",
                        "schema": {
                            "type": "string",
                            "default": "desc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list.\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListRunsResponse"
                                }
                            }
                        }
                    }
                },
                "x-oaiMeta": {
                    "name": "List runs",
                    "beta": true,
                    "returns": "A list of [run](/docs/api-reference/runs/object) objects."
                }
            },
            "post": {
                "operationId": "createRun",
                "tags": [
                    "Assistants"
                ],
                "summary": "Create a run.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "thread_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the thread to run."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateRunRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RunObject"
                                }
                            }
                        }
                    }
                },
                "x-oaiMeta": {
                    "name": "Create run",
                    "beta": true,
                    "returns": "A [run](/docs/api-reference/runs/object) object."
                }
            }
        },
        "/threads/{thread_id}/runs/{run_id}": {
            "get": {
                "operationId": "getRun",
                "tags": [
                    "Assistants"
                ],
                "summary": "Retrieves a run.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "thread_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the [thread](/docs/api-reference/threads) that was run."
                    },
                    {
                        "in": "path",
                        "name": "run_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the run to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RunObject"
                                }
                            }
                        }
                    }
                },
                "x-oaiMeta": {
                    "name": "Retrieve run",
                    "beta": true,
                    "returns": "The [run](/docs/api-reference/runs/object) object matching the specified ID."
                }
            },
            "post": {
                "operationId": "modifyRun",
                "tags": [
                    "Assistants"
                ],
                "summary": "Modifies a run.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "thread_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the [thread](/docs/api-reference/threads) that was run."
                    },
                    {
                        "in": "path",
                        "name": "run_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the run to modify."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModifyRunRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RunObject"
                                }
                            }
                        }
                    }
                },
                "x-oaiMeta": {
                    "name": "Modify run",
                    "beta": true,
                    "returns": "The modified [run](/docs/api-reference/runs/object) object matching the specified ID."
                }
            }
        },
        "/threads/{thread_id}/runs/{run_id}/submit_tool_outputs": {
            "post": {
                "operationId": "submitToolOutputsToRun",
                "tags": [
                    "Assistants"
                ],
                "summary": "When a run has the `status: \"requires_action\"` and `required_action.type` is `submit_tool_outputs`, this endpoint can be used to submit the outputs from the tool calls once they're all completed. All outputs must be submitted in a single request.\n",
                "parameters": [
                    {
                        "in": "path",
                        "name": "thread_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the [thread](/docs/api-reference/threads) to which this run belongs."
                    },
                    {
                        "in": "path",
                        "name": "run_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the run that requires the tool output submission."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubmitToolOutputsRunRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RunObject"
                                }
                            }
                        }
                    }
                },
                "x-oaiMeta": {
                    "name": "Submit tool outputs to run",
                    "beta": true,
                    "returns": "The modified [run](/docs/api-reference/runs/object) object matching the specified ID."
                }
            }
        },
        "/threads/{thread_id}/runs/{run_id}/cancel": {
            "post": {
                "operationId": "cancelRun",
                "tags": [
                    "Assistants"
                ],
                "summary": "Cancels a run that is `in_progress`.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "thread_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the thread to which this run belongs."
                    },
                    {
                        "in": "path",
                        "name": "run_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the run to cancel."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RunObject"
                                }
                            }
                        }
                    }
                },
                "x-oaiMeta": {
                    "name": "Cancel a run",
                    "beta": true,
                    "returns": "The modified [run](/docs/api-reference/runs/object) object matching the specified ID."
                }
            }
        },
        "/threads/{thread_id}/runs/{run_id}/steps": {
            "get": {
                "operationId": "listRunSteps",
                "tags": [
                    "Assistants"
                ],
                "summary": "Returns a list of run steps belonging to a run.",
                "parameters": [
                    {
                        "name": "thread_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the thread the run and run steps belong to."
                    },
                    {
                        "name": "run_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the run the run steps belong to."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.\n",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and `desc` for descending order.\n",
                        "schema": {
                            "type": "string",
                            "default": "desc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list.\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListRunStepsResponse"
                                }
                            }
                        }
                    }
                },
                "x-oaiMeta": {
                    "name": "List run steps",
                    "beta": true,
                    "returns": "A list of [run step](/docs/api-reference/runs/step-object) objects."
                }
            }
        },
        "/threads/{thread_id}/runs/{run_id}/steps/{step_id}": {
            "get": {
                "operationId": "getRunStep",
                "tags": [
                    "Assistants"
                ],
                "summary": "Retrieves a run step.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "thread_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the thread to which the run and run step belongs."
                    },
                    {
                        "in": "path",
                        "name": "run_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the run to which the run step belongs."
                    },
                    {
                        "in": "path",
                        "name": "step_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the run step to retrieve."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RunStepObject"
                                }
                            }
                        }
                    }
                },
                "x-oaiMeta": {
                    "name": "Retrieve run step",
                    "beta": true,
                    "returns": "The [run step](/docs/api-reference/runs/step-object) object matching the specified ID."
                }
            }
        },
        "/assistants/{assistant_id}/files": {
            "get": {
                "operationId": "listAssistantFiles",
                "tags": [
                    "Assistants"
                ],
                "summary": "Returns a list of assistant files.",
                "parameters": [
                    {
                        "name": "assistant_id",
                        "in": "path",
                        "description": "The ID of the assistant the file belongs to.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.\n",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and `desc` for descending order.\n",
                        "schema": {
                            "type": "string",
                            "default": "desc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list.\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListAssistantFilesResponse"
                                }
                            }
                        }
                    }
                },
                "x-oaiMeta": {
                    "name": "List assistant files",
                    "beta": true,
                    "returns": "A list of [assistant file](/docs/api-reference/assistants/file-object) objects."
                }
            },
            "post": {
                "operationId": "createAssistantFile",
                "tags": [
                    "Assistants"
                ],
                "summary": "Create an assistant file by attaching a [File](/docs/api-reference/files) to an [assistant](/docs/api-reference/assistants).",
                "parameters": [
                    {
                        "in": "path",
                        "name": "assistant_id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "file-AF1WoRqd3aJAHsqc9NY7iL8F"
                        },
                        "description": "The ID of the assistant for which to create a File.\n"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAssistantFileRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssistantFileObject"
                                }
                            }
                        }
                    }
                },
                "x-oaiMeta": {
                    "name": "Create assistant file",
                    "beta": true,
                    "returns": "An [assistant file](/docs/api-reference/assistants/file-object) object."
                }
            }
        },
        "/assistants/{assistant_id}/files/{file_id}": {
            "get": {
                "operationId": "getAssistantFile",
                "tags": [
                    "Assistants"
                ],
                "summary": "Retrieves an AssistantFile.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "assistant_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the assistant who the file belongs to."
                    },
                    {
                        "in": "path",
                        "name": "file_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the file we're getting."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssistantFileObject"
                                }
                            }
                        }
                    }
                },
                "x-oaiMeta": {
                    "name": "Retrieve assistant file",
                    "beta": true,
                    "returns": "The [assistant file](/docs/api-reference/assistants/file-object) object matching the specified ID."
                }
            },
            "delete": {
                "operationId": "deleteAssistantFile",
                "tags": [
                    "Assistants"
                ],
                "summary": "Delete an assistant file.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "assistant_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the assistant that the file belongs to."
                    },
                    {
                        "in": "path",
                        "name": "file_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the file to delete."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteAssistantFileResponse"
                                }
                            }
                        }
                    }
                },
                "x-oaiMeta": {
                    "name": "Delete assistant file",
                    "beta": true,
                    "returns": "Deletion status"
                }
            }
        },
        "/threads/{thread_id}/messages/{message_id}/files": {
            "get": {
                "operationId": "listMessageFiles",
                "tags": [
                    "Assistants"
                ],
                "summary": "Returns a list of message files.",
                "parameters": [
                    {
                        "name": "thread_id",
                        "in": "path",
                        "description": "The ID of the thread that the message and files belong to.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "message_id",
                        "in": "path",
                        "description": "The ID of the message that the files belongs to.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.\n",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and `desc` for descending order.\n",
                        "schema": {
                            "type": "string",
                            "default": "desc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "A cursor for use in pagination. `after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "A cursor for use in pagination. `before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list.\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListMessageFilesResponse"
                                }
                            }
                        }
                    }
                },
                "x-oaiMeta": {
                    "name": "List message files",
                    "beta": true,
                    "returns": "A list of [message file](/docs/api-reference/messages/file-object) objects."
                }
            }
        },
        "/threads/{thread_id}/messages/{message_id}/files/{file_id}": {
            "get": {
                "operationId": "getMessageFile",
                "tags": [
                    "Assistants"
                ],
                "summary": "Retrieves a message file.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "thread_id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "thread_AF1WoRqd3aJAHsqc9NY7iL8F"
                        },
                        "description": "The ID of the thread to which the message and File belong."
                    },
                    {
                        "in": "path",
                        "name": "message_id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "msg_AF1WoRqd3aJAHsqc9NY7iL8F"
                        },
                        "description": "The ID of the message the file belongs to."
                    },
                    {
                        "in": "path",
                        "name": "file_id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "file-AF1WoRqd3aJAHsqc9NY7iL8F"
                        },
                        "description": "The ID of the file being retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageFileObject"
                                }
                            }
                        }
                    }
                },
                "x-oaiMeta": {
                    "name": "Retrieve message file",
                    "beta": true,
                    "returns": "The [message file](/docs/api-reference/messages/file-object) object."
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "ApiKeyAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        },
        "schemas": {
            "Error": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "nullable": true
                    },
                    "message": {
                        "type": "string",
                        "nullable": false
                    },
                    "param": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "nullable": false
                    }
                },
                "required": [
                    "type",
                    "message",
                    "param",
                    "code"
                ]
            },
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/Error"
                    }
                },
                "required": [
                    "error"
                ]
            },
            "AssistantObject": {
                "type": "object",
                "title": "Assistant",
                "description": "Represents an `assistant` that can call the model and use tools.",
                "properties": {
                    "id": {
                        "description": "The identifier, which can be referenced in API endpoints.",
                        "type": "string"
                    },
                    "object": {
                        "description": "The object type, which is always `assistant`.",
                        "type": "string",
                        "enum": [
                            "assistant"
                        ]
                    },
                    "created_at": {
                        "description": "The Unix timestamp (in seconds) for when the assistant was created.",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of the assistant. The maximum length is 256 characters.\n",
                        "type": "string",
                        "maxLength": 256,
                        "nullable": true
                    },
                    "description": {
                        "description": "The description of the assistant. The maximum length is 512 characters.\n",
                        "type": "string",
                        "maxLength": 512,
                        "nullable": true
                    },
                    "model": {
                        "description": "",
                        "type": "string"
                    },
                    "instructions": {
                        "description": "The system instructions that the assistant uses. The maximum length is 32768 characters.\n",
                        "type": "string",
                        "maxLength": 32768,
                        "nullable": true
                    },
                    "tools": {
                        "description": "A list of tool enabled on the assistant. There can be a maximum of 128 tools per assistant. Tools can be of types `code_interpreter`, `retrieval`, or `function`.\n",
                        "default": [],
                        "type": "array",
                        "maxItems": 128,
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/AssistantToolsCode"
                                },
                                {
                                    "$ref": "#/components/schemas/AssistantToolsRetrieval"
                                },
                                {
                                    "$ref": "#/components/schemas/AssistantToolsFunction"
                                }
                            ],
                            "x-oaiExpandable": true
                        }
                    },
                    "file_ids": {
                        "description": "A list of [file](/docs/api-reference/files) IDs attached to this assistant. There can be a maximum of 20 files attached to the assistant. Files are ordered by their creation date in ascending order.\n",
                        "default": [],
                        "type": "array",
                        "maxItems": 20,
                        "items": {
                            "type": "string"
                        }
                    },
                    "metadata": {
                        "description": "Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.\n",
                        "type": "object",
                        "x-oaiTypeLabel": "map",
                        "nullable": true
                    }
                },
                "required": [
                    "id",
                    "object",
                    "created_at",
                    "name",
                    "description",
                    "model",
                    "instructions",
                    "tools",
                    "file_ids",
                    "metadata"
                ],
                "x-oaiMeta": {
                    "name": "The assistant object",
                    "beta": true,
                    "example": ""
                }
            },
            "CreateAssistantRequest": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "model": {
                        "description": "",
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "name": {
                        "description": "The name of the assistant. The maximum length is 256 characters.\n",
                        "type": "string",
                        "nullable": true,
                        "maxLength": 256
                    },
                    "description": {
                        "description": "The description of the assistant. The maximum length is 512 characters.\n",
                        "type": "string",
                        "nullable": true,
                        "maxLength": 512
                    },
                    "instructions": {
                        "description": "The system instructions that the assistant uses. The maximum length is 32768 characters.\n",
                        "type": "string",
                        "nullable": true,
                        "maxLength": 32768
                    },
                    "tools": {
                        "description": "A list of tool enabled on the assistant. There can be a maximum of 128 tools per assistant. Tools can be of types `code_interpreter`, `retrieval`, or `function`.\n",
                        "default": [],
                        "type": "array",
                        "maxItems": 128,
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/AssistantToolsCode"
                                },
                                {
                                    "$ref": "#/components/schemas/AssistantToolsRetrieval"
                                },
                                {
                                    "$ref": "#/components/schemas/AssistantToolsFunction"
                                }
                            ],
                            "x-oaiExpandable": true
                        }
                    },
                    "file_ids": {
                        "description": "A list of [file](/docs/api-reference/files) IDs attached to this assistant. There can be a maximum of 20 files attached to the assistant. Files are ordered by their creation date in ascending order.\n",
                        "default": [],
                        "maxItems": 20,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "metadata": {
                        "description": "Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.\n",
                        "type": "object",
                        "x-oaiTypeLabel": "map",
                        "nullable": true
                    }
                },
                "required": [
                    "model"
                ]
            },
            "ModifyAssistantRequest": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "model": {
                        "description": "",
                        "anyOf": [
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "name": {
                        "description": "The name of the assistant. The maximum length is 256 characters.\n",
                        "type": "string",
                        "nullable": true,
                        "maxLength": 256
                    },
                    "description": {
                        "description": "The description of the assistant. The maximum length is 512 characters.\n",
                        "type": "string",
                        "nullable": true,
                        "maxLength": 512
                    },
                    "instructions": {
                        "description": "The system instructions that the assistant uses. The maximum length is 32768 characters.\n",
                        "type": "string",
                        "nullable": true,
                        "maxLength": 32768
                    },
                    "tools": {
                        "description": "A list of tool enabled on the assistant. There can be a maximum of 128 tools per assistant. Tools can be of types `code_interpreter`, `retrieval`, or `function`.\n",
                        "default": [],
                        "type": "array",
                        "maxItems": 128,
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/AssistantToolsCode"
                                },
                                {
                                    "$ref": "#/components/schemas/AssistantToolsRetrieval"
                                },
                                {
                                    "$ref": "#/components/schemas/AssistantToolsFunction"
                                }
                            ],
                            "x-oaiExpandable": true
                        }
                    },
                    "file_ids": {
                        "description": "A list of [File](/docs/api-reference/files) IDs attached to this assistant. There can be a maximum of 20 files attached to the assistant. Files are ordered by their creation date in ascending order. If a file was previosuly attached to the list but does not show up in the list, it will be deleted from the assistant.\n",
                        "default": [],
                        "type": "array",
                        "maxItems": 20,
                        "items": {
                            "type": "string"
                        }
                    },
                    "metadata": {
                        "description": "Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.\n",
                        "type": "object",
                        "x-oaiTypeLabel": "map",
                        "nullable": true
                    }
                }
            },
            "DeleteAssistantResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "object": {
                        "type": "string",
                        "enum": [
                            "assistant.deleted"
                        ]
                    }
                },
                "required": [
                    "id",
                    "object",
                    "deleted"
                ]
            },
            "ListAssistantsResponse": {
                "type": "object",
                "properties": {
                    "object": {
                        "type": "string",
                        "example": "list"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssistantObject"
                        }
                    },
                    "first_id": {
                        "type": "string",
                        "example": "asst_hLBK7PXBv5Lr2NQT7KLY0ag1"
                    },
                    "last_id": {
                        "type": "string",
                        "example": "asst_QLoItBbqwyAJEzlTy4y9kOMM"
                    },
                    "has_more": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "required": [
                    "object",
                    "data",
                    "first_id",
                    "last_id",
                    "has_more"
                ],
                "x-oaiMeta": {
                    "name": "List assistants response object",
                    "group": "chat",
                    "example": ""
                }
            },
            "AssistantToolsCode": {
                "type": "object",
                "title": "Code interpreter tool",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "The type of tool being defined: `code_interpreter`",
                        "enum": [
                            "code_interpreter"
                        ]
                    }
                },
                "required": [
                    "type"
                ]
            },
            "AssistantToolsRetrieval": {
                "type": "object",
                "title": "Retrieval tool",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "The type of tool being defined: `retrieval`",
                        "enum": [
                            "retrieval"
                        ]
                    }
                },
                "required": [
                    "type"
                ]
            },
            "AssistantToolsFunction": {
                "type": "object",
                "title": "Function tool",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "The type of tool being defined: `function`",
                        "enum": [
                            "function"
                        ]
                    },
                    "function": {
                        "$ref": "#/components/schemas/FunctionObject"
                    }
                },
                "required": [
                    "type",
                    "function"
                ]
            },
            "RunObject": {
                "type": "object",
                "title": "A run on a thread",
                "description": "Represents an execution run on a [thread](/docs/api-reference/threads).",
                "properties": {
                    "id": {
                        "description": "The identifier, which can be referenced in API endpoints.",
                        "type": "string"
                    },
                    "object": {
                        "description": "The object type, which is always `thread.run`.",
                        "type": "string",
                        "enum": [
                            "thread.run"
                        ]
                    },
                    "created_at": {
                        "description": "The Unix timestamp (in seconds) for when the run was created.",
                        "type": "integer"
                    },
                    "thread_id": {
                        "description": "The ID of the [thread](/docs/api-reference/threads) that was executed on as a part of this run.",
                        "type": "string"
                    },
                    "assistant_id": {
                        "description": "The ID of the [assistant](/docs/api-reference/assistants) used for execution of this run.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the run, which can be either `queued`, `in_progress`, `requires_action`, `cancelling`, `cancelled`, `failed`, `completed`, or `expired`.",
                        "type": "string",
                        "enum": [
                            "queued",
                            "in_progress",
                            "requires_action",
                            "cancelling",
                            "cancelled",
                            "failed",
                            "completed",
                            "expired"
                        ]
                    },
                    "required_action": {
                        "type": "object",
                        "description": "Details on the action required to continue the run. Will be `null` if no action is required.",
                        "nullable": true,
                        "properties": {
                            "type": {
                                "description": "For now, this is always `submit_tool_outputs`.",
                                "type": "string",
                                "enum": [
                                    "submit_tool_outputs"
                                ]
                            },
                            "submit_tool_outputs": {
                                "type": "object",
                                "description": "Details on the tool outputs needed for this run to continue.",
                                "properties": {
                                    "tool_calls": {
                                        "type": "array",
                                        "description": "A list of the relevant tool calls.",
                                        "items": {
                                            "$ref": "#/components/schemas/RunToolCallObject"
                                        }
                                    }
                                },
                                "required": [
                                    "tool_calls"
                                ]
                            }
                        },
                        "required": [
                            "type",
                            "submit_tool_outputs"
                        ]
                    },
                    "last_error": {
                        "type": "object",
                        "description": "The last error associated with this run. Will be `null` if there are no errors.",
                        "nullable": true,
                        "properties": {
                            "code": {
                                "type": "string",
                                "description": "One of `server_error` or `rate_limit_exceeded`.",
                                "enum": [
                                    "server_error",
                                    "rate_limit_exceeded"
                                ]
                            },
                            "message": {
                                "type": "string",
                                "description": "A human-readable description of the error."
                            }
                        },
                        "required": [
                            "code",
                            "message"
                        ]
                    },
                    "expires_at": {
                        "description": "The Unix timestamp (in seconds) for when the run will expire.",
                        "type": "integer"
                    },
                    "started_at": {
                        "description": "The Unix timestamp (in seconds) for when the run was started.",
                        "type": "integer",
                        "nullable": true
                    },
                    "cancelled_at": {
                        "description": "The Unix timestamp (in seconds) for when the run was cancelled.",
                        "type": "integer",
                        "nullable": true
                    },
                    "failed_at": {
                        "description": "The Unix timestamp (in seconds) for when the run failed.",
                        "type": "integer",
                        "nullable": true
                    },
                    "completed_at": {
                        "description": "The Unix timestamp (in seconds) for when the run was completed.",
                        "type": "integer",
                        "nullable": true
                    },
                    "model": {
                        "description": "The model that the [assistant](/docs/api-reference/assistants) used for this run.",
                        "type": "string"
                    },
                    "instructions": {
                        "description": "The instructions that the [assistant](/docs/api-reference/assistants) used for this run.",
                        "type": "string"
                    },
                    "tools": {
                        "description": "The list of tools that the [assistant](/docs/api-reference/assistants) used for this run.",
                        "default": [],
                        "type": "array",
                        "maxItems": 20,
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/AssistantToolsCode"
                                },
                                {
                                    "$ref": "#/components/schemas/AssistantToolsRetrieval"
                                },
                                {
                                    "$ref": "#/components/schemas/AssistantToolsFunction"
                                }
                            ],
                            "x-oaiExpandable": true
                        }
                    },
                    "file_ids": {
                        "description": "The list of [File](/docs/api-reference/files) IDs the [assistant](/docs/api-reference/assistants) used for this run.",
                        "default": [],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "metadata": {
                        "description": "Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.\n",
                        "type": "object",
                        "x-oaiTypeLabel": "map",
                        "nullable": true
                    }
                },
                "required": [
                    "id",
                    "object",
                    "created_at",
                    "thread_id",
                    "assistant_id",
                    "status",
                    "required_action",
                    "last_error",
                    "expires_at",
                    "started_at",
                    "cancelled_at",
                    "failed_at",
                    "completed_at",
                    "model",
                    "instructions",
                    "tools",
                    "file_ids",
                    "metadata"
                ],
                "x-oaiMeta": {
                    "name": "The run object",
                    "beta": true,
                    "example": "{\n  \"id\": \"run_example123\",\n  \"object\": \"thread.run\",\n  \"created_at\": 1698107661,\n  \"assistant_id\": \"asst_gZ1aOomboBuYWPcXJx4vAYB0\",\n  \"thread_id\": \"thread_adOpf7Jbb5Abymz0QbwxAh3c\",\n  \"status\": \"completed\",\n  \"started_at\": 1699073476,\n  \"expires_at\": null,\n  \"cancelled_at\": null,\n  \"failed_at\": null,\n  \"completed_at\": 1699073498,\n  \"last_error\": null,\n  \"model\": \"gpt-4\",\n  \"instructions\": null,\n  \"tools\": [{\"type\": \"retrieval\"}, {\"type\": \"code_interpreter\"}],\n  \"file_ids\": [],\n  \"metadata\": {}\n}\n"
                }
            },
            "CreateRunRequest": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "assistant_id": {
                        "description": "The ID of the [assistant](/docs/api-reference/assistants) to use to execute this run.",
                        "type": "string"
                    },
                    "model": {
                        "description": "The ID of the [Model](/docs/api-reference/models) to be used to execute this run. If a value is provided here, it will override the model associated with the assistant. If not, the model associated with the assistant will be used.",
                        "type": "string",
                        "nullable": true
                    },
                    "instructions": {
                        "description": "Override the default system message of the assistant. This is useful for modifying the behavior on a per-run basis.",
                        "type": "string",
                        "nullable": true
                    },
                    "tools": {
                        "description": "Override the tools the assistant can use for this run. This is useful for modifying the behavior on a per-run basis.",
                        "nullable": true,
                        "type": "array",
                        "maxItems": 20,
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/AssistantToolsCode"
                                },
                                {
                                    "$ref": "#/components/schemas/AssistantToolsRetrieval"
                                },
                                {
                                    "$ref": "#/components/schemas/AssistantToolsFunction"
                                }
                            ],
                            "x-oaiExpandable": true
                        }
                    },
                    "metadata": {
                        "description": "Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.\n",
                        "type": "object",
                        "x-oaiTypeLabel": "map",
                        "nullable": true
                    }
                },
                "required": [
                    "assistant_id"
                ]
            },
            "ListRunsResponse": {
                "type": "object",
                "properties": {
                    "object": {
                        "type": "string",
                        "example": "list"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RunObject"
                        }
                    },
                    "first_id": {
                        "type": "string",
                        "example": "run_hLBK7PXBv5Lr2NQT7KLY0ag1"
                    },
                    "last_id": {
                        "type": "string",
                        "example": "run_QLoItBbqwyAJEzlTy4y9kOMM"
                    },
                    "has_more": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "required": [
                    "object",
                    "data",
                    "first_id",
                    "last_id",
                    "has_more"
                ]
            },
            "ModifyRunRequest": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "metadata": {
                        "description": "Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.\n",
                        "type": "object",
                        "x-oaiTypeLabel": "map",
                        "nullable": true
                    }
                }
            },
            "SubmitToolOutputsRunRequest": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "tool_outputs": {
                        "description": "A list of tools for which the outputs are being submitted.",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "tool_call_id": {
                                    "type": "string",
                                    "description": "The ID of the tool call in the `required_action` object within the run object the output is being submitted for."
                                },
                                "output": {
                                    "type": "string",
                                    "description": "The output of the tool call to be submitted to continue the run."
                                }
                            }
                        }
                    }
                },
                "required": [
                    "tool_outputs"
                ]
            },
            "RunToolCallObject": {
                "type": "object",
                "description": "Tool call objects",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the tool call. This ID must be referenced when you submit the tool outputs in using the [Submit tool outputs to run](/docs/api-reference/runs/submitToolOutputs) endpoint."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of tool call the output is required for. For now, this is always `function`.",
                        "enum": [
                            "function"
                        ]
                    },
                    "function": {
                        "type": "object",
                        "description": "The function definition.",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "The name of the function."
                            },
                            "arguments": {
                                "type": "string",
                                "description": "The arguments that the model expects you to pass to the function."
                            }
                        },
                        "required": [
                            "name",
                            "arguments"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "function"
                ]
            },
            "CreateThreadAndRunRequest": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "assistant_id": {
                        "description": "The ID of the [assistant](/docs/api-reference/assistants) to use to execute this run.",
                        "type": "string"
                    },
                    "thread": {
                        "$ref": "#/components/schemas/CreateThreadRequest",
                        "description": "If no thread is provided, an empty thread will be created."
                    },
                    "model": {
                        "description": "The ID of the [Model](/docs/api-reference/models) to be used to execute this run. If a value is provided here, it will override the model associated with the assistant. If not, the model associated with the assistant will be used.",
                        "type": "string",
                        "nullable": true
                    },
                    "instructions": {
                        "description": "Override the default system message of the assistant. This is useful for modifying the behavior on a per-run basis.",
                        "type": "string",
                        "nullable": true
                    },
                    "tools": {
                        "description": "Override the tools the assistant can use for this run. This is useful for modifying the behavior on a per-run basis.",
                        "nullable": true,
                        "type": "array",
                        "maxItems": 20,
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/AssistantToolsCode"
                                },
                                {
                                    "$ref": "#/components/schemas/AssistantToolsRetrieval"
                                },
                                {
                                    "$ref": "#/components/schemas/AssistantToolsFunction"
                                }
                            ]
                        }
                    },
                    "metadata": {
                        "description": "Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.\n",
                        "type": "object",
                        "x-oaiTypeLabel": "map",
                        "nullable": true
                    }
                },
                "required": [
                    "assistant_id"
                ]
            },
            "ThreadObject": {
                "type": "object",
                "title": "Thread",
                "description": "Represents a thread that contains [messages](/docs/api-reference/messages).",
                "properties": {
                    "id": {
                        "description": "The identifier, which can be referenced in API endpoints.",
                        "type": "string"
                    },
                    "object": {
                        "description": "The object type, which is always `thread`.",
                        "type": "string",
                        "enum": [
                            "thread"
                        ]
                    },
                    "created_at": {
                        "description": "The Unix timestamp (in seconds) for when the thread was created.",
                        "type": "integer"
                    },
                    "metadata": {
                        "description": "Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.\n",
                        "type": "object",
                        "x-oaiTypeLabel": "map",
                        "nullable": true
                    }
                },
                "required": [
                    "id",
                    "object",
                    "created_at",
                    "metadata"
                ],
                "x-oaiMeta": {
                    "name": "The thread object",
                    "beta": true,
                    "example": "{\n  \"id\": \"thread_abc123\",\n  \"object\": \"thread\",\n  \"created_at\": 1698107661,\n  \"metadata\": {}\n}\n"
                }
            },
            "CreateThreadRequest": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "messages": {
                        "description": "A list of [messages](/docs/api-reference/messages) to start the thread with.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreateMessageRequest"
                        }
                    },
                    "metadata": {
                        "description": "Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.\n",
                        "type": "object",
                        "x-oaiTypeLabel": "map",
                        "nullable": true
                    }
                }
            },
            "ModifyThreadRequest": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "metadata": {
                        "description": "Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.\n",
                        "type": "object",
                        "x-oaiTypeLabel": "map",
                        "nullable": true
                    }
                }
            },
            "DeleteThreadResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "object": {
                        "type": "string",
                        "enum": [
                            "thread.deleted"
                        ]
                    }
                },
                "required": [
                    "id",
                    "object",
                    "deleted"
                ]
            },
            "ListThreadsResponse": {
                "properties": {
                    "object": {
                        "type": "string",
                        "example": "list"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ThreadObject"
                        }
                    },
                    "first_id": {
                        "type": "string",
                        "example": "asst_hLBK7PXBv5Lr2NQT7KLY0ag1"
                    },
                    "last_id": {
                        "type": "string",
                        "example": "asst_QLoItBbqwyAJEzlTy4y9kOMM"
                    },
                    "has_more": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "required": [
                    "object",
                    "data",
                    "first_id",
                    "last_id",
                    "has_more"
                ]
            },
            "MessageObject": {
                "type": "object",
                "title": "The message object",
                "description": "Represents a message within a [thread](/docs/api-reference/threads).",
                "properties": {
                    "id": {
                        "description": "The identifier, which can be referenced in API endpoints.",
                        "type": "string"
                    },
                    "object": {
                        "description": "The object type, which is always `thread.message`.",
                        "type": "string",
                        "enum": [
                            "thread.message"
                        ]
                    },
                    "created_at": {
                        "description": "The Unix timestamp (in seconds) for when the message was created.",
                        "type": "integer"
                    },
                    "thread_id": {
                        "description": "The [thread](/docs/api-reference/threads) ID that this message belongs to.",
                        "type": "string"
                    },
                    "role": {
                        "description": "The entity that produced the message. One of `user` or `assistant`.",
                        "type": "string",
                        "enum": [
                            "user",
                            "assistant"
                        ]
                    },
                    "content": {
                        "description": "The content of the message in array of text and/or images.",
                        "type": "array",
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/MessageContentImageFileObject"
                                },
                                {
                                    "$ref": "#/components/schemas/MessageContentTextObject"
                                }
                            ],
                            "x-oaiExpandable": true
                        }
                    },
                    "assistant_id": {
                        "description": "If applicable, the ID of the [assistant](/docs/api-reference/assistants) that authored this message.",
                        "type": "string",
                        "nullable": true
                    },
                    "run_id": {
                        "description": "If applicable, the ID of the [run](/docs/api-reference/runs) associated with the authoring of this message.",
                        "type": "string",
                        "nullable": true
                    },
                    "file_ids": {
                        "description": "A list of [file](/docs/api-reference/files) IDs that the assistant should use. Useful for tools like retrieval and code_interpreter that can access files. A maximum of 10 files can be attached to a message.",
                        "default": [],
                        "maxItems": 10,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "metadata": {
                        "description": "Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.\n",
                        "type": "object",
                        "x-oaiTypeLabel": "map",
                        "nullable": true
                    }
                },
                "required": [
                    "id",
                    "object",
                    "created_at",
                    "thread_id",
                    "role",
                    "content",
                    "assistant_id",
                    "run_id",
                    "file_ids",
                    "metadata"
                ],
                "x-oaiMeta": {
                    "name": "The message object",
                    "beta": true,
                    "example": "{\n  \"id\": \"msg_dKYDWyQvtjDBi3tudL1yWKDa\",\n  \"object\": \"thread.message\",\n  \"created_at\": 1698983503,\n  \"thread_id\": \"thread_RGUhOuO9b2nrktrmsQ2uSR6I\",\n  \"role\": \"assistant\",\n  \"content\": [\n    {\n      \"type\": \"text\",\n      \"text\": {\n        \"value\": \"Hi! How can I help you today?\",\n        \"annotations\": []\n      }\n    }\n  ],\n  \"file_ids\": [],\n  \"assistant_id\": \"asst_ToSF7Gb04YMj8AMMm50ZLLtY\",\n  \"run_id\": \"run_BjylUJgDqYK9bOhy4yjAiMrn\",\n  \"metadata\": {}\n}\n"
                }
            },
            "CreateMessageRequest": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "role",
                    "content"
                ],
                "properties": {
                    "role": {
                        "type": "string",
                        "enum": [
                            "user"
                        ],
                        "description": "The role of the entity that is creating the message. Currently only `user` is supported."
                    },
                    "content": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32768,
                        "description": "The content of the message."
                    },
                    "file_ids": {
                        "description": "A list of [File](/docs/api-reference/files) IDs that the message should use. There can be a maximum of 10 files attached to a message. Useful for tools like `retrieval` and `code_interpreter` that can access and use files.",
                        "default": [],
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 10,
                        "items": {
                            "type": "string"
                        }
                    },
                    "metadata": {
                        "description": "Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.\n",
                        "type": "object",
                        "x-oaiTypeLabel": "map",
                        "nullable": true
                    }
                }
            },
            "ModifyMessageRequest": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "metadata": {
                        "description": "Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.\n",
                        "type": "object",
                        "x-oaiTypeLabel": "map",
                        "nullable": true
                    }
                }
            },
            "DeleteMessageResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "object": {
                        "type": "string",
                        "enum": [
                            "thread.message.deleted"
                        ]
                    }
                },
                "required": [
                    "id",
                    "object",
                    "deleted"
                ]
            },
            "ListMessagesResponse": {
                "properties": {
                    "object": {
                        "type": "string",
                        "example": "list"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageObject"
                        }
                    },
                    "first_id": {
                        "type": "string",
                        "example": "msg_hLBK7PXBv5Lr2NQT7KLY0ag1"
                    },
                    "last_id": {
                        "type": "string",
                        "example": "msg_QLoItBbqwyAJEzlTy4y9kOMM"
                    },
                    "has_more": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "required": [
                    "object",
                    "data",
                    "first_id",
                    "last_id",
                    "has_more"
                ]
            },
            "MessageContentImageFileObject": {
                "title": "Image file",
                "type": "object",
                "description": "References an image [File](/docs/api-reference/files) in the content of a message.",
                "properties": {
                    "type": {
                        "description": "Always `image_file`.",
                        "type": "string",
                        "enum": [
                            "image_file"
                        ]
                    },
                    "image_file": {
                        "type": "object",
                        "properties": {
                            "file_id": {
                                "description": "The [File](/docs/api-reference/files) ID of the image in the message content.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "file_id"
                        ]
                    }
                },
                "required": [
                    "type",
                    "image_file"
                ]
            },
            "MessageContentTextObject": {
                "title": "Text",
                "type": "object",
                "description": "The text content that is part of a message.",
                "properties": {
                    "type": {
                        "description": "Always `text`.",
                        "type": "string",
                        "enum": [
                            "text"
                        ]
                    },
                    "text": {
                        "type": "object",
                        "properties": {
                            "value": {
                                "description": "The data that makes up the text.",
                                "type": "string"
                            },
                            "annotations": {
                                "type": "array",
                                "items": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/MessageContentTextAnnotationsFileCitationObject"
                                        },
                                        {
                                            "$ref": "#/components/schemas/MessageContentTextAnnotationsFilePathObject"
                                        }
                                    ],
                                    "x-oaiExpandable": true
                                }
                            }
                        },
                        "required": [
                            "value",
                            "annotations"
                        ]
                    }
                },
                "required": [
                    "type",
                    "text"
                ]
            },
            "MessageContentTextAnnotationsFileCitationObject": {
                "title": "File citation",
                "type": "object",
                "description": "A citation within the message that points to a specific quote from a specific File associated with the assistant or the message. Generated when the assistant uses the \"retrieval\" tool to search files.",
                "properties": {
                    "type": {
                        "description": "Always `file_citation`.",
                        "type": "string",
                        "enum": [
                            "file_citation"
                        ]
                    },
                    "text": {
                        "description": "The text in the message content that needs to be replaced.",
                        "type": "string"
                    },
                    "file_citation": {
                        "type": "object",
                        "properties": {
                            "file_id": {
                                "description": "The ID of the specific File the citation is from.",
                                "type": "string"
                            },
                            "quote": {
                                "description": "The specific quote in the file.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "file_id",
                            "quote"
                        ]
                    },
                    "start_index": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "end_index": {
                        "type": "integer",
                        "minimum": 0
                    }
                },
                "required": [
                    "type",
                    "text",
                    "file_citation",
                    "start_index",
                    "end_index"
                ]
            },
            "MessageContentTextAnnotationsFilePathObject": {
                "title": "File path",
                "type": "object",
                "description": "A URL for the file that's generated when the assistant used the `code_interpreter` tool to generate a file.",
                "properties": {
                    "type": {
                        "description": "Always `file_path`.",
                        "type": "string",
                        "enum": [
                            "file_path"
                        ]
                    },
                    "text": {
                        "description": "The text in the message content that needs to be replaced.",
                        "type": "string"
                    },
                    "file_path": {
                        "type": "object",
                        "properties": {
                            "file_id": {
                                "description": "The ID of the file that was generated.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "file_id"
                        ]
                    },
                    "start_index": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "end_index": {
                        "type": "integer",
                        "minimum": 0
                    }
                },
                "required": [
                    "type",
                    "text",
                    "file_path",
                    "start_index",
                    "end_index"
                ]
            },
            "RunStepObject": {
                "type": "object",
                "title": "Run steps",
                "description": "Represents a step in execution of a run.\n",
                "properties": {
                    "id": {
                        "description": "The identifier of the run step, which can be referenced in API endpoints.",
                        "type": "string"
                    },
                    "object": {
                        "description": "The object type, which is always `thread.run.step``.",
                        "type": "string",
                        "enum": [
                            "thread.run.step"
                        ]
                    },
                    "created_at": {
                        "description": "The Unix timestamp (in seconds) for when the run step was created.",
                        "type": "integer"
                    },
                    "assistant_id": {
                        "description": "The ID of the [assistant](/docs/api-reference/assistants) associated with the run step.",
                        "type": "string"
                    },
                    "thread_id": {
                        "description": "The ID of the [thread](/docs/api-reference/threads) that was run.",
                        "type": "string"
                    },
                    "run_id": {
                        "description": "The ID of the [run](/docs/api-reference/runs) that this run step is a part of.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The type of run step, which can be either `message_creation` or `tool_calls`.",
                        "type": "string",
                        "enum": [
                            "message_creation",
                            "tool_calls"
                        ]
                    },
                    "status": {
                        "description": "The status of the run step, which can be either `in_progress`, `cancelled`, `failed`, `completed`, or `expired`.",
                        "type": "string",
                        "enum": [
                            "in_progress",
                            "cancelled",
                            "failed",
                            "completed",
                            "expired"
                        ]
                    },
                    "step_details": {
                        "type": "object",
                        "description": "The details of the run step.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RunStepDetailsMessageCreationObject"
                            },
                            {
                                "$ref": "#/components/schemas/RunStepDetailsToolCallsObject"
                            }
                        ],
                        "x-oaiExpandable": true
                    },
                    "last_error": {
                        "type": "object",
                        "description": "The last error associated with this run step. Will be `null` if there are no errors.",
                        "nullable": true,
                        "properties": {
                            "code": {
                                "type": "string",
                                "description": "One of `server_error` or `rate_limit_exceeded`.",
                                "enum": [
                                    "server_error",
                                    "rate_limit_exceeded"
                                ]
                            },
                            "message": {
                                "type": "string",
                                "description": "A human-readable description of the error."
                            }
                        },
                        "required": [
                            "code",
                            "message"
                        ]
                    },
                    "expired_at": {
                        "description": "The Unix timestamp (in seconds) for when the run step expired. A step is considered expired if the parent run is expired.",
                        "type": "integer",
                        "nullable": true
                    },
                    "cancelled_at": {
                        "description": "The Unix timestamp (in seconds) for when the run step was cancelled.",
                        "type": "integer",
                        "nullable": true
                    },
                    "failed_at": {
                        "description": "The Unix timestamp (in seconds) for when the run step failed.",
                        "type": "integer",
                        "nullable": true
                    },
                    "completed_at": {
                        "description": "The Unix timestamp (in seconds) for when the run step completed.",
                        "type": "integer",
                        "nullable": true
                    },
                    "metadata": {
                        "description": "Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.\n",
                        "type": "object",
                        "x-oaiTypeLabel": "map",
                        "nullable": true
                    }
                },
                "required": [
                    "id",
                    "object",
                    "created_at",
                    "assistant_id",
                    "thread_id",
                    "run_id",
                    "type",
                    "status",
                    "step_details",
                    "last_error",
                    "expired_at",
                    "cancelled_at",
                    "failed_at",
                    "completed_at",
                    "metadata"
                ],
                "x-oaiMeta": {
                    "name": "The run step object",
                    "beta": true,
                    "example": ""
                }
            },
            "ListRunStepsResponse": {
                "properties": {
                    "object": {
                        "type": "string",
                        "example": "list"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RunStepObject"
                        }
                    },
                    "first_id": {
                        "type": "string",
                        "example": "step_hLBK7PXBv5Lr2NQT7KLY0ag1"
                    },
                    "last_id": {
                        "type": "string",
                        "example": "step_QLoItBbqwyAJEzlTy4y9kOMM"
                    },
                    "has_more": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "required": [
                    "object",
                    "data",
                    "first_id",
                    "last_id",
                    "has_more"
                ]
            },
            "RunStepDetailsMessageCreationObject": {
                "title": "Message creation",
                "type": "object",
                "description": "Details of the message creation by the run step.",
                "properties": {
                    "type": {
                        "description": "Always `message_creation``.",
                        "type": "string",
                        "enum": [
                            "message_creation"
                        ]
                    },
                    "message_creation": {
                        "type": "object",
                        "properties": {
                            "message_id": {
                                "type": "string",
                                "description": "The ID of the message that was created by this run step."
                            }
                        },
                        "required": [
                            "message_id"
                        ]
                    }
                },
                "required": [
                    "type",
                    "message_creation"
                ]
            },
            "RunStepDetailsToolCallsObject": {
                "title": "Tool calls",
                "type": "object",
                "description": "Details of the tool call.",
                "properties": {
                    "type": {
                        "description": "Always `tool_calls`.",
                        "type": "string",
                        "enum": [
                            "tool_calls"
                        ]
                    },
                    "tool_calls": {
                        "type": "array",
                        "description": "An array of tool calls the run step was involved in. These can be associated with one of three types of tools: `code_interpreter`, `retrieval`, or `function`.\n",
                        "items": {
                            "type": "object",
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/RunStepDetailsToolCallsCodeObject"
                                },
                                {
                                    "$ref": "#/components/schemas/RunStepDetailsToolCallsRetrievalObject"
                                },
                                {
                                    "$ref": "#/components/schemas/RunStepDetailsToolCallsFunctionObject"
                                }
                            ],
                            "x-oaiExpandable": true
                        }
                    }
                },
                "required": [
                    "type",
                    "tool_calls"
                ]
            },
            "RunStepDetailsToolCallsCodeObject": {
                "title": "Code interpreter tool call",
                "type": "object",
                "description": "Details of the Code Interpreter tool call the run step was involved in.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the tool call."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of tool call. This is always going to be `code_interpreter` for this type of tool call.",
                        "enum": [
                            "code_interpreter"
                        ]
                    },
                    "code_interpreter": {
                        "type": "object",
                        "description": "The Code Interpreter tool call definition.",
                        "required": [
                            "input",
                            "outputs"
                        ],
                        "properties": {
                            "input": {
                                "type": "string",
                                "description": "The input to the Code Interpreter tool call."
                            },
                            "outputs": {
                                "type": "array",
                                "description": "The outputs from the Code Interpreter tool call. Code Interpreter can output one or more items, including text (`logs`) or images (`image`). Each of these are represented by a different object type.",
                                "items": {
                                    "type": "object",
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/RunStepDetailsToolCallsCodeOutputLogsObject"
                                        },
                                        {
                                            "$ref": "#/components/schemas/RunStepDetailsToolCallsCodeOutputImageObject"
                                        }
                                    ],
                                    "x-oaiExpandable": true
                                }
                            }
                        }
                    }
                },
                "required": [
                    "id",
                    "type",
                    "code_interpreter"
                ]
            },
            "RunStepDetailsToolCallsCodeOutputLogsObject": {
                "title": "Code interpreter log output",
                "type": "object",
                "description": "Text output from the Code Interpreter tool call as part of a run step.",
                "properties": {
                    "type": {
                        "description": "Always `logs`.",
                        "type": "string",
                        "enum": [
                            "logs"
                        ]
                    },
                    "logs": {
                        "type": "string",
                        "description": "The text output from the Code Interpreter tool call."
                    }
                },
                "required": [
                    "type",
                    "logs"
                ]
            },
            "RunStepDetailsToolCallsCodeOutputImageObject": {
                "title": "Code interpreter image output",
                "type": "object",
                "properties": {
                    "type": {
                        "description": "Always `image`.",
                        "type": "string",
                        "enum": [
                            "image"
                        ]
                    },
                    "image": {
                        "type": "object",
                        "properties": {
                            "file_id": {
                                "description": "The [file](/docs/api-reference/files) ID of the image.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "file_id"
                        ]
                    }
                },
                "required": [
                    "type",
                    "image"
                ]
            },
            "RunStepDetailsToolCallsRetrievalObject": {
                "title": "Retrieval tool call",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the tool call object."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of tool call. This is always going to be `retrieval` for this type of tool call.",
                        "enum": [
                            "retrieval"
                        ]
                    },
                    "retrieval": {
                        "type": "object",
                        "description": "For now, this is always going to be an empty object.",
                        "x-oaiTypeLabel": "map"
                    }
                },
                "required": [
                    "id",
                    "type",
                    "retrieval"
                ]
            },
            "RunStepDetailsToolCallsFunctionObject": {
                "type": "object",
                "title": "Function tool call",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the tool call object."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of tool call. This is always going to be `function` for this type of tool call.",
                        "enum": [
                            "function"
                        ]
                    },
                    "function": {
                        "type": "object",
                        "description": "The definition of the function that was called.",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "The name of the function."
                            },
                            "arguments": {
                                "type": "string",
                                "description": "The arguments passed to the function."
                            },
                            "output": {
                                "type": "string",
                                "description": "The output of the function. This will be `null` if the outputs have not been [submitted](/docs/api-reference/runs/submitToolOutputs) yet.",
                                "nullable": true
                            }
                        },
                        "required": [
                            "name",
                            "arguments",
                            "output"
                        ]
                    }
                },
                "required": [
                    "id",
                    "type",
                    "function"
                ]
            },
            "AssistantFileObject": {
                "type": "object",
                "title": "Assistant files",
                "description": "A list of [Files](/docs/api-reference/files) attached to an `assistant`.",
                "properties": {
                    "id": {
                        "description": "The identifier, which can be referenced in API endpoints.",
                        "type": "string"
                    },
                    "object": {
                        "description": "The object type, which is always `assistant.file`.",
                        "type": "string",
                        "enum": [
                            "assistant.file"
                        ]
                    },
                    "created_at": {
                        "description": "The Unix timestamp (in seconds) for when the assistant file was created.",
                        "type": "integer"
                    },
                    "assistant_id": {
                        "description": "The assistant ID that the file is attached to.",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "object",
                    "created_at",
                    "assistant_id"
                ],
                "x-oaiMeta": {
                    "name": "The assistant file object",
                    "beta": true,
                    "example": "{\n  \"id\": \"file-wB6RM6wHdA49HfS2DJ9fEyrH\",\n  \"object\": \"assistant.file\",\n  \"created_at\": 1699055364,\n  \"assistant_id\": \"asst_FBOFvAOHhwEWMghbMGseaPGQ\"\n}\n"
                }
            },
            "CreateAssistantFileRequest": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "file_id": {
                        "description": "A [File](/docs/api-reference/files) ID (with `purpose=\"assistants\"`) that the assistant should use. Useful for tools like `retrieval` and `code_interpreter` that can access files.",
                        "type": "string"
                    }
                },
                "required": [
                    "file_id"
                ]
            },
            "DeleteAssistantFileResponse": {
                "type": "object",
                "description": "Deletes the association between the assistant and the file, but does not delete the [File](/docs/api-reference/files) object itself.",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "object": {
                        "type": "string",
                        "enum": [
                            "assistant.file.deleted"
                        ]
                    }
                },
                "required": [
                    "id",
                    "object",
                    "deleted"
                ]
            },
            "ListAssistantFilesResponse": {
                "properties": {
                    "object": {
                        "type": "string",
                        "example": "list"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssistantFileObject"
                        }
                    },
                    "first_id": {
                        "type": "string",
                        "example": "file-hLBK7PXBv5Lr2NQT7KLY0ag1"
                    },
                    "last_id": {
                        "type": "string",
                        "example": "file-QLoItBbqwyAJEzlTy4y9kOMM"
                    },
                    "has_more": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "required": [
                    "object",
                    "data",
                    "items",
                    "first_id",
                    "last_id",
                    "has_more"
                ]
            },
            "MessageFileObject": {
                "type": "object",
                "title": "Message files",
                "description": "A list of files attached to a `message`.",
                "properties": {
                    "id": {
                        "description": "The identifier, which can be referenced in API endpoints.",
                        "type": "string"
                    },
                    "object": {
                        "description": "The object type, which is always `thread.message.file`.",
                        "type": "string",
                        "enum": [
                            "thread.message.file"
                        ]
                    },
                    "created_at": {
                        "description": "The Unix timestamp (in seconds) for when the message file was created.",
                        "type": "integer"
                    },
                    "message_id": {
                        "description": "The ID of the [message](/docs/api-reference/messages) that the [File](/docs/api-reference/files) is attached to.",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "object",
                    "created_at",
                    "message_id"
                ],
                "x-oaiMeta": {
                    "name": "The message file object",
                    "beta": true,
                    "example": "{\n  \"id\": \"file-BK7bzQj3FfZFXr7DbL6xJwfo\",\n  \"object\": \"thread.message.file\",\n  \"created_at\": 1698107661,\n  \"message_id\": \"message_QLoItBbqwyAJEzlTy4y9kOMM\",\n  \"file_id\": \"file-BK7bzQj3FfZFXr7DbL6xJwfo\"\n}\n"
                }
            },
            "ListMessageFilesResponse": {
                "properties": {
                    "object": {
                        "type": "string",
                        "example": "list"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageFileObject"
                        }
                    },
                    "first_id": {
                        "type": "string",
                        "example": "file-hLBK7PXBv5Lr2NQT7KLY0ag1"
                    },
                    "last_id": {
                        "type": "string",
                        "example": "file-QLoItBbqwyAJEzlTy4y9kOMM"
                    },
                    "has_more": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "required": [
                    "object",
                    "data",
                    "items",
                    "first_id",
                    "last_id",
                    "has_more"
                ]
            }
        }
    },
    "security": [
        {
            "ApiKeyAuth": []
        }
    ],
    "x-oaiMeta": {
        "groups": [
            {
                "id": "assistants",
                "title": "Assistants",
                "beta": true,
                "description": "Build assistants that can call models and use tools to perform tasks.\n",
                "sections": [
                    {
                        "type": "object",
                        "key": "AssistantObject",
                        "path": "object"
                    },
                    {
                        "type": "endpoint",
                        "key": "createAssistant",
                        "path": "createAssistant"
                    },
                    {
                        "type": "endpoint",
                        "key": "getAssistant",
                        "path": "getAssistant"
                    },
                    {
                        "type": "endpoint",
                        "key": "modifyAssistant",
                        "path": "modifyAssistant"
                    },
                    {
                        "type": "endpoint",
                        "key": "deleteAssistant",
                        "path": "deleteAssistant"
                    },
                    {
                        "type": "endpoint",
                        "key": "listAssistants",
                        "path": "listAssistants"
                    },
                    {
                        "type": "object",
                        "key": "AssistantFileObject",
                        "path": "file-object"
                    },
                    {
                        "type": "endpoint",
                        "key": "createAssistantFile",
                        "path": "createAssistantFile"
                    },
                    {
                        "type": "endpoint",
                        "key": "getAssistantFile",
                        "path": "getAssistantFile"
                    },
                    {
                        "type": "endpoint",
                        "key": "deleteAssistantFile",
                        "path": "deleteAssistantFile"
                    },
                    {
                        "type": "endpoint",
                        "key": "listAssistantFiles",
                        "path": "listAssistantFiles"
                    }
                ]
            },
            {
                "id": "threads",
                "title": "Threads",
                "beta": true,
                "description": "Create threads that assistants can interact with.\n",
                "sections": [
                    {
                        "type": "object",
                        "key": "ThreadObject",
                        "path": "object"
                    },
                    {
                        "type": "endpoint",
                        "key": "createThread",
                        "path": "createThread"
                    },
                    {
                        "type": "endpoint",
                        "key": "getThread",
                        "path": "getThread"
                    },
                    {
                        "type": "endpoint",
                        "key": "modifyThread",
                        "path": "modifyThread"
                    },
                    {
                        "type": "endpoint",
                        "key": "deleteThread",
                        "path": "deleteThread"
                    }
                ]
            },
            {
                "id": "messages",
                "title": "Messages",
                "beta": true,
                "description": "Create messages within threads\n\nRelated guide: [Assistants](/docs/assistants/overview)\n",
                "sections": [
                    {
                        "type": "object",
                        "key": "MessageObject",
                        "path": "object"
                    },
                    {
                        "type": "endpoint",
                        "key": "createMessage",
                        "path": "createMessage"
                    },
                    {
                        "type": "endpoint",
                        "key": "getMessage",
                        "path": "getMessage"
                    },
                    {
                        "type": "endpoint",
                        "key": "modifyMessage",
                        "path": "modifyMessage"
                    },
                    {
                        "type": "endpoint",
                        "key": "listMessages",
                        "path": "listMessages"
                    },
                    {
                        "type": "object",
                        "key": "MessageFileObject",
                        "path": "file-object"
                    },
                    {
                        "type": "endpoint",
                        "key": "getMessageFile",
                        "path": "getMessageFile"
                    },
                    {
                        "type": "endpoint",
                        "key": "listMessageFiles",
                        "path": "listMessageFiles"
                    }
                ]
            },
            {
                "id": "runs",
                "title": "Runs",
                "beta": true,
                "description": "Represents an execution run on a thread.\n",
                "sections": [
                    {
                        "type": "object",
                        "key": "RunObject",
                        "path": "object"
                    },
                    {
                        "type": "endpoint",
                        "key": "createRun",
                        "path": "createRun"
                    },
                    {
                        "type": "endpoint",
                        "key": "getRun",
                        "path": "getRun"
                    },
                    {
                        "type": "endpoint",
                        "key": "modifyRun",
                        "path": "modifyRun"
                    },
                    {
                        "type": "endpoint",
                        "key": "listRuns",
                        "path": "listRuns"
                    },
                    {
                        "type": "endpoint",
                        "key": "submitToolOuputsToRun",
                        "path": "submitToolOutputs"
                    },
                    {
                        "type": "endpoint",
                        "key": "cancelRun",
                        "path": "cancelRun"
                    },
                    {
                        "type": "endpoint",
                        "key": "createThreadAndRun",
                        "path": "createThreadAndRun"
                    },
                    {
                        "type": "object",
                        "key": "RunStepObject",
                        "path": "step-object"
                    },
                    {
                        "type": "endpoint",
                        "key": "getRunStep",
                        "path": "getRunStep"
                    },
                    {
                        "type": "endpoint",
                        "key": "listRunSteps",
                        "path": "listRunSteps"
                    }
                ]
            }
        ]
    }
}